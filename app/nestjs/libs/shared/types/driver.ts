// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: driver.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "driver";

export interface DriverRequest {
  id: string;
}

export interface DriverResponse {
  id: string;
  destination: string;
}

export const DRIVER_PACKAGE_NAME = "driver";

export interface DriverServiceClient {
  getDriver(request: DriverRequest): Observable<DriverResponse>;
}

export interface DriverServiceController {
  getDriver(request: DriverRequest): Promise<DriverResponse> | Observable<DriverResponse> | DriverResponse;
}

export function DriverServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getDriver"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("DriverService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("DriverService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const DRIVER_SERVICE_NAME = "DriverService";
