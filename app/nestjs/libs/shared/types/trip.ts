// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: trip.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "trip";

export interface TripRequest {
  id: string;
}

export interface TripResponse {
  id: string;
  destination: string;
}

export const TRIP_PACKAGE_NAME = "trip";

export interface TripServiceClient {
  getTrip(request: TripRequest): Observable<TripResponse>;
}

export interface TripServiceController {
  getTrip(request: TripRequest): Promise<TripResponse> | Observable<TripResponse> | TripResponse;
}

export function TripServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getTrip"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("TripService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("TripService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const TRIP_SERVICE_NAME = "TripService";
